(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{352:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("它是一套轻量级的前端微应用开发架构，能够在一个页面上同时运行多个应用。在技术栈的选择上，也没有强制性的定义，它可以通过编写驱动引擎来实现对各种渲染引擎的支持。")]),t._v(" "),a("p",[t._v("它的孵化来源于艾耕科技的内部项目，针对路由复杂度高、代码管理混乱以及开发维护不方便的痛点上，我们提出了一种以后端服务开发理念为指引的前端微应用开发模式。它能够解决所有基于路由化的应用场景，并且提高路由匹配的速度，实现高性能路由分发。")]),t._v(" "),a("h2",{attrs:{id:"设计理念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计理念"}},[t._v("#")]),t._v(" 设计理念")]),t._v(" "),a("p",[t._v("它的产生离不开对后端服务的理解。在后端开发的模型中，多个"),a("code",[t._v("client")]),t._v("应对单个"),a("code",[t._v("server")]),t._v("的模型给了我们很大灵感。在前端，无非就是单个"),a("code",[t._v("client")]),t._v("应对单个server的情况，那么我们就可以将后端的理念移植到前端。非常幸运的是，后端触发请求流转的事件也可以对应到前端，所以我们可以认为，用户的页面请求就是一个相对于后端的"),a("code",[t._v("request")]),t._v("请求。这样一来，前端理念已成。")]),t._v(" "),a("p",[t._v("为了将请求处理逻辑解偶，我们采用了"),a("code",[t._v("AOP")]),t._v("和"),a("code",[t._v("iOC")]),t._v("理念来作为这个架构的基础设计，在代码层面上可以实现几乎类似JAVA注解的模式。再加上将前端各大框架作为渲染引擎，一个完整的架构设计就出来了。")]),t._v(" "),a("h2",{attrs:{id:"遇到的难点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遇到的难点"}},[t._v("#")]),t._v(" 遇到的难点")]),t._v(" "),a("p",[t._v("在架构设计之初，我们遇到了一些难点，经过好多个版本的迭代，最终成型。那么我们稍微讲解其中的难点与特殊设计以及技术方案的取舍。")]),t._v(" "),a("h3",{attrs:{id:"ioc设计中的自动绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ioc设计中的自动绑定"}},[t._v("#")]),t._v(" iOC设计中的自动绑定")]),t._v(" "),a("p",[t._v("我们采用了第三方开源的架构 "),a("a",{attrs:{href:"https://www.npmjs.com/inversify",target:"_blank",rel:"noopener noreferrer"}},[t._v("inversify"),a("OutboundLink")],1),t._v("。如果根据这个架构的设计，我们需要不断的进行如下的代码编写：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Container")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ServiceA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toSelf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Container")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ServiceB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toSelf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Container")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ServiceC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toSelf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n")])])]),a("p",[t._v("如果我们模块多了，忘记绑定注入，那么也许会在调用某个服务的时候报错，提示找不到服务定义，而且每次绑定都是件非常累人的事情。那么为考虑如何将一来自动绑定呢？")]),t._v(" "),a("p",[t._v("通过对"),a("code",[t._v("Controller")]),t._v("的设定作为入口，我们提供一个"),a("code",[t._v("useInject")]),t._v("方法。这个方法主要是在注解编写时候提供自动注入的能力。比如说：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("SomeAnnotation")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("classModules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useInject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("classModules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" descriptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("我们将"),a("code",[t._v("inversify:container")]),t._v("全局化，然后在"),a("code",[t._v("useInject")]),t._v("内部使用"),a("code",[t._v("Container.bind(classModules).toSelf()")]),t._v("方法来绑定。当然，我们还需要判断是否这个服务已经被绑定。当一切结束后，你会发现，我们根本不需要关心依赖如何绑定，只需要在什么时候调用就什么时候引用即可。")]),t._v(" "),a("h3",{attrs:{id:"通用响应式对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用响应式对象"}},[t._v("#")]),t._v(" 通用响应式对象")]),t._v(" "),a("p",[t._v("为了解决通用性数据响应的问题，我们考虑该如何将数据绑定起来，如何无缝实现数据对各大框架的兼容。就算是已经接入了各大框架，那么每个框架的响应原理不同，我们底层数据响应该如何去做？")]),t._v(" "),a("p",[t._v("庆幸的是，随着vue3的出现，好像给我们提供了一个希望。我们考虑将 "),a("a",{attrs:{href:"https://www.npmjs.com/@vue/reactivity",target:"_blank",rel:"noopener noreferrer"}},[t._v("@vue/reactivity"),a("OutboundLink")],1),t._v(" 作为底层数据响应，通过桥接方式对各大框架进行"),a("code",[t._v("forceUpdate")]),t._v("的任务调度。而在vue3内部则天然支持，无需做更多的调度。这样的方式浑然天成。不论是"),a("code",[t._v("react")]),t._v("或者"),a("code",[t._v("preact")]),t._v("都可以完美接受。")]),t._v(" "),a("p",[t._v("只要是响应式框架，那么必定有任务调度机制，通过他们自身的任务调度，就一定可以结合vue3的reactivity特性对数据进行响应。")]),t._v(" "),a("p",[t._v("在react中，我们采用")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forUpdate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useReducer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这样的方式获取到"),a("code",[t._v("forceUpdate")]),t._v("函数进行响应。而"),a("code",[t._v("@vue/reactivity")]),t._v("中使用")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" effection "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("effect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("对响应数据的依赖进行收集后供"),a("code",[t._v("forceUpdate")]),t._v("来调度。这同时给react提供了一种非常便捷的数据修改方式，再也不需要使用"),a("code",[t._v("dispatch")]),t._v("来更新数据。唯一的缺点就是我们需要在"),a("code",[t._v("effect")]),t._v("函数中尽可能精确的收集依赖来保证数据的同步响应，特别是对数组的操作。")]),t._v(" "),a("h3",{attrs:{id:"百万路由设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#百万路由设计"}},[t._v("#")]),t._v(" 百万路由设计")]),t._v(" "),a("p",[t._v("前端路由一般性能不是瓶颈，但是在一些渲染架构上，比如"),a("code",[t._v("React")]),t._v("上，在量级非常大的组件下，DIFF就显得非常笨拙：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" routes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Route component"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("App"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Route path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"groups"')]),t._v(" components"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("main"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sidebar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" GroupsSidebar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Route path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"users"')]),t._v(" components"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("main"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sidebar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UsersSidebar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Route path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"users/:userId"')]),t._v(" component"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Profile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Route"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 10000个routers")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Route"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("当匹配到的路由正巧命中最后一个，这时候"),a("code",[t._v("<Route />")]),t._v("组件diff了正好10000个，相当于循环中需要匹配10000次，在不断更新的vDom上，它的性能是非常差的。")]),t._v(" "),a("p",[t._v("当然有人会问实际业务场景中不可能存在如此之多的路由。是的，这确实不可能存在，但是对于性能的压榨前提下，我们需要更高性能的路由匹配模式。而"),a("code",[t._v("TypeClient")]),t._v("正好采用了高性能的字符串索引算法"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Radix_tree",target:"_blank",rel:"noopener noreferrer"}},[t._v("radixtree"),a("OutboundLink")],1),t._v("来解决这个问题。")]),t._v(" "),a("h3",{attrs:{id:"component调用ioc服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#component调用ioc服务"}},[t._v("#")]),t._v(" Component调用iOC服务")]),t._v(" "),a("p",[t._v("一般的，在各大框架中，组件是独立的存在，但是我们基于iOC原则做服务功能的划分的时候，如何有效接入组件中使用，我们提出一个概念叫"),a("code",[t._v("iOCComponent")]),t._v("，这是一种新组件概念。")]),t._v(" "),a("div",{staticClass:"language-tsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-tsx"}},[a("code",[t._v("@"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NewComponent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  @"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("inject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AnyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" AnyService"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AnyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AnyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("xxx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return tsx")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("当然为来解决组件缓存问题，我们已经设计过这样的模式来获取")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Cmp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NewComponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("render"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Cmp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h2",{attrs:{id:"如何使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用"}},[t._v("#")]),t._v(" 如何使用")]),t._v(" "),a("p",[t._v("框架使用具备一定的难度，上手成本较高，所以我们提供来模板供大家使用。")]),t._v(" "),a("h3",{attrs:{id:"模板化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板化"}},[t._v("#")]),t._v(" 模板化")]),t._v(" "),a("p",[t._v("React端：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git@github.com:flowxjs/TypeClientReactTemplate.git\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" TypeClientReactTemplate\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf .git\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" ci\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" start\n")])])]),a("blockquote",[a("p",[t._v("Vue3暂时不提供。需要等其正式发布后提供")])]),t._v(" "),a("h3",{attrs:{id:"自定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义"}},[t._v("#")]),t._v(" 自定义")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i @typeclient/core\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i @typeclient/react\n")])])]),a("blockquote",[a("p",[t._v("请参考后续讲解如何搭建自定义的项目")])])])}),[],!1,null,null,null);s.default=e.exports}}]);